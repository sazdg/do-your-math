{"version":3,"sources":["components/Currency.js","components/Input.js","components/Output.js","components/Footer.js","components/Button.js","App.js","reportWebVitals.js","index.js"],"names":["Currency","className","type","style","width","Component","Input","this","props","title","onChange","change","Output","output","Footer","Button","onClick","click","label","App","useState","startPrice","setStartPrice","buyTotal","setBuyTotal","quantity","setQuantity","finalPrice","setFinalPrice","sellTotal","setSellTotal","percent","setPercent","gains","setGains","useEffect","event","Number","target","value","window","location","reload","callName","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAeeA,E,4JAXX,WACI,OACI,sBAAKC,UAAU,WAAf,UACI,yEACA,uBAAOC,KAAK,OAAOC,MAAO,CAACC,MAAO,UAClC,gF,GANOC,aCcRC,E,4JAZX,WACI,OACI,sBAAKL,UAAU,gBAAf,UACI,iCAAOM,KAAKC,MAAMC,MAAlB,QACA,uBAAOP,KAAK,SACZD,UAAU,YACVS,SAAUH,KAAKC,MAAMG,gB,GARjBN,aCYLO,E,4JAVX,WACI,OACI,sBAAKX,UAAU,gBAAf,UACI,iCAAOM,KAAKC,MAAMC,MAAlB,QACA,sBAAMP,KAAK,SAASD,UAAU,gBAA9B,SAA+CM,KAAKC,MAAMK,gB,GANrDR,aCUNS,E,4JATX,WACI,OACI,qBAAKb,UAAU,SAAf,uC,GAHSI,aCWNU,E,4JATX,WACI,OACI,qBAAKd,UAAU,SAAf,SACI,wBAAQC,KAAK,SAASc,QAAST,KAAKC,MAAMS,MAA1C,SAAkDV,KAAKC,MAAMU,c,GALxDb,aCuENc,MA/Df,WAGE,MAAoCC,mBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEA,EAAgCJ,mBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAoCN,mBAAS,GAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KACA,EAAkCR,mBAAS,GAA3C,mBAAOS,EAAP,KAAkBC,EAAlB,KACA,EAA8BV,mBAAS,GAAvC,mBAAOW,EAAP,KAAgBC,EAAhB,KACA,EAA0BZ,mBAAS,GAAnC,mBAAOa,EAAP,KAAcC,EAAd,KAwBA,OAZAC,qBAAU,WACLV,EAAW,GAAKE,EAAa,IAC9BG,EAAaL,EAAWE,GACxBO,EAASL,EAAYN,MAEtB,CAACE,EAAUE,EAAYE,EAAWN,IAQnC,sBAAKtB,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,MAGF,sBAAKA,UAAU,QAAf,UACE,cAAC,EAAD,CAAOQ,MAAO,mBACZE,OAAQ,SAACyB,GAAD,OAAWd,EAAce,OAAOD,EAAME,OAAOC,WACvD,cAAC,EAAD,CAAO9B,MAAO,iBACZE,OAAQ,SAACyB,GAAD,OAAWZ,EAAYa,OAAOD,EAAME,OAAOC,WAErD,cAAC,EAAD,CAAQ9B,MAAO,WAAYI,OAAQY,IAEnC,cAAC,EAAD,CAAOhB,MAAO,mBACdE,OAAQ,SAACyB,GAAD,OAAWR,EAAcS,OAAOD,EAAME,OAAOC,WACrD,cAAC,EAAD,CAAQrB,MAAM,YAAYD,MAtCb,WACdM,EAAW,GAAKI,EAAa,IAC9BD,EAAYH,EAAWF,GACvBW,GAAaL,EAAaN,GAAcA,EAAc,SAqCpD,cAAC,EAAD,CAAQZ,MAAO,kBAAmBI,OAAQgB,IAC1C,cAAC,EAAD,CAAQpB,MAAO,WAAYI,OAAQkB,IACnC,cAAC,EAAD,CAAQtB,MAAO,aAAcI,OAAQoB,IACrC,cAAC,EAAD,CAAQf,MAAM,QAAQD,MAzBZ,WACduB,OAAOC,SAASC,UAwB0BC,SAAS,iBAGjD,cAAC,EAAD,QCzDSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.87d08adc.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../App.css';\r\n\r\nclass Currency extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Currency\">\r\n                <span>üí∏üí∏üí∏ </span>\r\n                <input type=\"text\" style={{width: '8rem'}}/>\r\n                <span>üí∏üí∏üí∏ </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Currency;","import React, { Component } from 'react';\r\nimport '../App.css';\r\n\r\nclass Input extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"InputElements\">\r\n                <span>{this.props.title}: </span>\r\n                <input type=\"number\" \r\n                className=\"InputType\"\r\n                onChange={this.props.change} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Input;","import React, { Component } from 'react'\r\nimport '../App.css';\r\n\r\nclass Output extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"InputElements\">\r\n                <span>{this.props.title}: </span>\r\n                <span type=\"number\" className=\"ResultsOutput\">{this.props.output}</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Output;","import React, { Component } from 'react';\r\nimport '../App.css';\r\n\r\nclass Footer extends Component {\r\n    render(){\r\n        return (\r\n            <div className=\"Footer\">\r\n                Made with love ‚ù§\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react'\r\nimport '../App.css';\r\n\r\nclass Button extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Button\">\r\n                <button type=\"button\" onClick={this.props.click}>{this.props.label}</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Button;","import './App.css';\nimport Currency from './components/Currency';\nimport Input from './components/Input';\nimport Output from './components/Output';\nimport Footer from './components/Footer';\nimport React, { useEffect, useState } from 'react';\nimport Button from './components/Button';\n\n//https://flaviocopes.com/react-how-to-get-value-input/ \n//https://blog.logrocket.com/a-guide-to-usestate-in-react-ecb9952e406c/ \n\nfunction App() {\n\n//useState enable states for the function components\n  const [startPrice, setStartPrice] = useState(0); //destrutturazione di arry\n  const [buyTotal, setBuyTotal] = useState(0);\n//stato corrente e la funzione che lo aggiorna (set...)\n  const [quantity, setQuantity] = useState(0);\n  const [finalPrice, setFinalPrice] = useState(0);\n  const [sellTotal, setSellTotal] = useState(0);\n  const [percent, setPercent] = useState(0);\n  const [gains, setGains] = useState(0);\n\n  const doYourMath = () => {\n    if(buyTotal > 0 && finalPrice > 0){\n      setQuantity(buyTotal / startPrice);\n      setPercent(((finalPrice - startPrice) / startPrice) * 100);\n    }\n  };\n\n  //useEffect comprende il meccanismo di componentDidUpdate, DidMount, WillUnmount\n  //per sincronizzare i risultati che dipendono dalla funzione doYourMathFinal\n  //rischio di infinite loop\n  useEffect(()=>{ \n    if(quantity > 0 && finalPrice > 0){\n      setSellTotal(quantity * finalPrice);\n      setGains(sellTotal - buyTotal);\n    }\n  }, [quantity, finalPrice, sellTotal, buyTotal,]);\n  //quando cambia una di queste variabili, useEffect fa il render\n\n  const Refresh = () => {\n    window.location.reload();\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"Title\">\n        <Currency />\n      </div>\n\n      <div className=\"Corpo\">\n        <Input title={'start price USDT'} \n          change={(event) => setStartPrice(Number(event.target.value))}/>\n        <Input title={'buy total USDT'} \n          change={(event) => setBuyTotal(Number(event.target.value))} />\n\n        <Output title={'quantity'} output={quantity} />\n\n        <Input title={'final price USDT'} \n        change={(event) => setFinalPrice(Number(event.target.value))} />\n        <Button label=\"Calculate\" click={doYourMath} />\n\n        <Output title={'sell total USDT'} output={sellTotal} />\n        <Output title={'% change'} output={percent} />\n        <Output title={'gains USDT'} output={gains} />\n        <Button label=\"Reset\" click={Refresh} callName=\"Refreshhh\" />\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n\n//         ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}